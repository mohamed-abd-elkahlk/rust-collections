{"$message_type":"diagnostic","message":"unresolved link to `1,2,3`","code":{"code":"rustdoc::broken_intra_doc_links","explanation":null},"level":"warning","spans":[{"file_name":"src/vectors/mod.rs","byte_start":986,"byte_end":991,"line_start":14,"line_end":14,"column_start":117,"column_end":122,"is_primary":true,"text":[{"text":"/// * Creation: You can create a vector using the vec! macro, like let vec = vec!\\[1, 2, 3\\]; , or using Vec::from([1,2,3]) or you create vector using Vec::new().","highlight_start":117,"highlight_end":122}],"label":"no item named `1,2,3` in scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(rustdoc::broken_intra_doc_links)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unresolved link to `1,2,3`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vectors/mod.rs:14:117\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// * Creation: You can create a vector using the vec! macro, like let vec = vec!\\[1, 2, 3\\]; , or using Vec::from([1,2,3]) or you create vector using Vec::n\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno item named `1,2,3` in scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved link to `0`","code":{"code":"rustdoc::broken_intra_doc_links","explanation":null},"level":"warning","spans":[{"file_name":"src/vectors/mod.rs","byte_start":1600,"byte_end":1601,"line_start":29,"line_end":29,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"/// * Indexing: Elements can be accessed using indexing, like vec[0].","highlight_start":67,"highlight_end":68}],"label":"no item named `0` in scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unresolved link to `0`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vectors/mod.rs:29:67\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// * Indexing: Elements can be accessed using indexing, like vec[0].\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno item named `0` in scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unclosed HTML tag `T`","code":{"code":"rustdoc::invalid_html_tags","explanation":null},"level":"warning","spans":[{"file_name":"src/vectors/mod.rs","byte_start":734,"byte_end":737,"line_start":12,"line_end":12,"column_start":48,"column_end":51,"is_primary":true,"text":[{"text":"/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include and it's Zero indexed :","highlight_start":48,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(rustdoc::invalid_html_tags)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try marking as source code","code":null,"level":"help","spans":[{"file_name":"src/vectors/mod.rs","byte_start":731,"byte_end":731,"line_start":12,"line_end":12,"column_start":45,"column_end":45,"is_primary":true,"text":[{"text":"/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include and it's Zero indexed :","highlight_start":45,"highlight_end":45}],"label":null,"suggested_replacement":"`","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/vectors/mod.rs","byte_start":737,"byte_end":737,"line_start":12,"line_end":12,"column_start":51,"column_end":51,"is_primary":true,"text":[{"text":"/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include and it's Zero indexed :","highlight_start":51,"highlight_end":51}],"label":null,"suggested_replacement":"`","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unclosed HTML tag `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vectors/mod.rs:12:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include an\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(rustdoc::invalid_html_tags)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try marking as source code\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m/// In Rust, a vector is represented by the \u001b[0m\u001b[0m\u001b[38;5;10m`\u001b[0m\u001b[0mVec<T>\u001b[0m\u001b[0m\u001b[38;5;10m`\u001b[0m\u001b[0m type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include and it's Zero indexed :\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unclosed HTML tag `T`","code":{"code":"rustdoc::invalid_html_tags","explanation":null},"level":"warning","spans":[{"file_name":"src/vectors/mod.rs","byte_start":822,"byte_end":825,"line_start":12,"line_end":12,"column_start":136,"column_end":139,"is_primary":true,"text":[{"text":"/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include and it's Zero indexed :","highlight_start":136,"highlight_end":139}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try marking as source code","code":null,"level":"help","spans":[{"file_name":"src/vectors/mod.rs","byte_start":819,"byte_end":819,"line_start":12,"line_end":12,"column_start":133,"column_end":133,"is_primary":true,"text":[{"text":"/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include and it's Zero indexed :","highlight_start":133,"highlight_end":133}],"label":null,"suggested_replacement":"`","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/vectors/mod.rs","byte_start":825,"byte_end":825,"line_start":12,"line_end":12,"column_start":139,"column_end":139,"is_primary":true,"text":[{"text":"/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include and it's Zero indexed :","highlight_start":139,"highlight_end":139}],"label":null,"suggested_replacement":"`","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unclosed HTML tag `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/vectors/mod.rs:12:136\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of Vec<T> in Rust include an\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try marking as source code\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m/// In Rust, a vector is represented by the Vec<T> type, where T is the type of elements stored in the vector. Some key features of \u001b[0m\u001b[0m\u001b[38;5;10m`\u001b[0m\u001b[0mVec<T>\u001b[0m\u001b[0m\u001b[38;5;10m`\u001b[0m\u001b[0m in Rust include and it's Zero indexed :\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                                                     \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}
